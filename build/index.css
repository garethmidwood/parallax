@charset "UTF-8";
/* base */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600;700&display=swap");
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* Breakpoints */
/* Leaving this here for use in development, should not go live */
/* Header */
/* Navigation */
/* Hero */
/* Buttons */
/* Main */
/* third parties */
/* generic */
body {
  min-width: 320px; }

/* tags first */
body {
  font-family: "Open Sans", serif;
  font-size: 16px;
  font-weight: 400; }
  @media (max-width: 61.24em) {
    body {
      font-size: 12px; } }

strong {
  font-weight: 700; }

/* components */
.cta-button {
  background-color: #f93b84;
  border-radius: 30px;
  color: #fff;
  display: inline-block;
  filter: drop-shadow(0px 5px 4px rgba(32, 0, 187, 0.3));
  font-size: 75%;
  font-weight: 700;
  height: 60px;
  line-height: 60px;
  padding: 0 37px;
  position: relative;
  text-decoration: none;
  text-transform: uppercase; }
  .cta-button:hover {
    background-color: #c80651; }
  @media (max-width: 46.24em) {
    .cta-button {
      height: 40px;
      line-height: 40px;
      margin: 10px 0;
      padding: 0 17px; } }
  .cta-button.shadow:before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    bottom: -3px;
    right: -3px;
    border: 1px solid #f93b84;
    border-radius: 30px; }

header {
  color: #9797ff; }
  header .notification {
    background-color: #000095;
    font-size: 75%;
    height: 60px;
    line-height: 60px;
    text-align: center;
    padding: 0 20px; }
    header .notification .menu {
      display: none;
      font-size: 20px;
      left: 20px;
      margin-left: 0;
      position: absolute;
      top: 0; }
    @media (max-width: 61.24em) {
      header .notification {
        text-align: right; }
        header .notification .menu {
          display: block; } }
    @media (max-width: 46.24em) {
      header .notification {
        line-height: 20px;
        height: 50px;
        padding-top: 10px; }
        header .notification .menu {
          line-height: 60px; }
        header .notification a {
          display: block; } }
    header .notification a {
      color: #f93b84;
      font-weight: 700;
      margin-left: 14px; }
      header .notification a:hover {
        color: #c80651; }

.hero {
  margin-top: -80px;
  height: calc(100vh - 60px);
  min-height: 500px;
  overflow: hidden;
  position: relative;
  /* I left out the video as the asset was not included in the package */ }
  .hero .cover {
    object-fit: cover;
    min-width: 100%; }
  .hero .overlay {
    height: calc(100% - 240px);
    min-width: 100%;
    padding: 120px 0;
    position: absolute;
    top: 0; }
    .hero .overlay:before {
      background-image: linear-gradient(218deg, #7f3fd1 0%, #3b8ef9 100%);
      bottom: 0;
      content: '';
      left: 0;
      opacity: 0.05;
      position: absolute;
      right: 0;
      top: 0; }
    .hero .overlay.message {
      align-items: center;
      color: #fff;
      display: flex;
      justify-content: center;
      max-height: calc(100% - 240px);
      text-align: center; }
      .hero .overlay.message div {
        padding: 0 20px; }
        .hero .overlay.message div h1 {
          font-family: "Montserrat", serif;
          font-size: 70px;
          font-weight: 700;
          max-width: 720px;
          margin-bottom: 18px;
          text-align: center;
          text-transform: uppercase; }
          @media (max-width: 61.24em) {
            .hero .overlay.message div h1 {
              font-size: 50px; } }
        .hero .overlay.message div p {
          margin: 0 auto 45px;
          max-width: 370px; }
        .hero .overlay.message div .cta-button:after {
          content: 'â†’';
          margin-left: 10px; }
  .hero .footer {
    bottom: 0;
    color: #fff;
    font-size: 87.5%;
    height: 120px;
    left: 0;
    letter-spacing: 1px;
    position: absolute;
    right: 0; }
    @media (max-width: 61.24em) {
      .hero .footer {
        height: 60px; } }
    .hero .footer div {
      margin: 0 auto;
      border-top: 1px solid #fff;
      max-width: 50%;
      padding-top: 33px;
      text-align: center;
      text-transform: uppercase; }
      @media (max-width: 61.24em) {
        .hero .footer div {
          max-width: 70%;
          padding-top: 20px; } }

.navigation {
  height: 80px;
  line-height: 80px;
  position: relative;
  text-align: center;
  z-index: 2; }
  .navigation .logo {
    height: 25px;
    position: absolute;
    left: 45px;
    top: 27px; }
    @media (max-width: 61.24em) {
      .navigation .logo {
        left: 20px; } }
  .navigation nav {
    display: inline-block;
    font-size: 87.5%; }
    @media (max-width: 61.24em) {
      .navigation nav {
        display: none; } }
    .navigation nav li {
      display: inline;
      margin: 0 45px; }
      .navigation nav li a {
        color: #fff;
        text-decoration: none; }
        .navigation nav li a:hover {
          color: #cccccc; }
  .navigation .cta-button {
    font-size: 75%;
    position: absolute;
    right: 16px;
    top: 10px; }

main {
  color: #5a6488;
  max-width: 1100px;
  margin: 50px auto 0; }
  @media (max-width: 61.24em) {
    main {
      max-width: 960px; } }
  main .row {
    display: flex;
    width: 100%; }
    @media (max-width: 46.24em) {
      main .row {
        display: block;
        padding: 40px 20px;
        width: auto; } }
    main .row > div {
      flex-basis: 50%;
      line-height: 30px;
      padding: 40px 80px; }
      @media (max-width: 46.24em) {
        main .row > div {
          padding: 0; } }
      main .row > div.title {
        font-size: 50px;
        font-family: "Montserrat", serif;
        font-weight: 700;
        line-height: 50px;
        text-align: left;
        color: #fff;
        text-shadow: 0 0 1px #3b8ef9;
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: #3b8ef9;
        text-transform: uppercase; }
        main .row > div.title span {
          color: #3b8ef9;
          display: block; }
      main .row > div h2 {
        font-family: "Open Sans", serif;
        font-size: 26px;
        font-weight: 700;
        letter-spacing: -1px;
        text-align: left; }
        @media (max-width: 46.24em) {
          main .row > div h2 {
            font-size: 16px; } }
      main .row > div img {
        width: 100%;
        margin: 0 auto;
        display: block; }
        @media (min-width: 30em) and (max-width: 46.24em) {
          main .row > div img {
            width: 80%; } }
      main .row > div.image-right, main .row > div.image-left {
        position: relative;
        padding: 0 80px;
        display: flex;
        align-items: center;
        justify-content: center; }
        main .row > div.image-right .shadow, main .row > div.image-left .shadow {
          position: absolute;
          top: 0;
          bottom: 0;
          right: 25%;
          left: 25%;
          perspective: 100vw;
          perspective-origin: right; }
          main .row > div.image-right .shadow:before, main .row > div.image-left .shadow:before {
            background-color: #f1f5fb;
            position: absolute;
            top: 20%;
            left: -40%;
            right: -40%;
            bottom: 20%;
            content: '';
            display: block;
            border-radius: 5px;
            transform-origin: center right;
            transform: rotateY(40deg) skewX(20deg); }
            @media (max-width: 46.24em) {
              main .row > div.image-right .shadow:before, main .row > div.image-left .shadow:before {
                left: -5%;
                right: -5%; } }
        main .row > div.image-right img, main .row > div.image-left img {
          position: relative;
          z-index: 2; }
      main .row > div.image-right img {
        margin: -80px -20% 0 0; }
        @media (max-width: 46.24em) {
          main .row > div.image-right img {
            margin: 0 auto; } }
      main .row > div h2 {
        color: #2a4789;
        margin-bottom: 40px; }
      main .row > div p {
        margin-bottom: 40px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
